#application
server:
  port: 50800
  tomcat.threads.max: 20
  forward-headers-strategy: FRAMEWORK

#monitoring
management:
  endpoint:
    health:
      show-details: never
  endpoints:
    web:
      exposure:
        include: "health,prometheus,heapdump"

#tracing
spring.application.name: core-service
management.tracing.sampling.probability: "1.0"
logging.level.io.opentelemetry: "OFF"
management.otlp.tracing.endpoint: "http://localhost:4318/v1/traces"

event.dispatcher.uri: "http://localhost:50500/events/dispatch"

#oidc
security.authentication.enabled: false

spring:
  security:
    oauth2:
      base-uri: "http://127.0.0.1:30200/oidc"
      authorization-uri: "http://127.0.0.1:30200/oidc/auth"
      logout-uri: "http://127.0.0.1:30200/logout"
#      base-uri: http://localhost:8080/oidc/realms/tenant-{tenantId}/protocol/openid-connect
#      authorization-uri: http://localhost:8080/oidc/realms/tenant-{tenantId}/protocol/openid-connect/auth
#      logout-uri: http://localhost:8080/oidc/realms/tenant-{tenantId}/protocol/openid-connect/logout
  
      client-id: "oauth2-proxy"
      client-secret: "none"
      user-name-attribute: "preferred_username"

#persistence
spring.datasource.url: jdbc:h2:mem:person;DATABASE_TO_UPPER=FALSE
#spring.datasource.url: jdbc:postgresql://localhost:5432/postgres
spring.datasource.username: postgres
spring.datasource.password: postgres

spring.datasource.hikari.maximum-pool-size: "10"
spring.datasource.hikari.connection-timeout: "10000"

multi-tenancy.tenants: "0,5"
multi-tenancy.schema-prefix: "core_"
database.provisioning.goals: "-migrate -import-demo-data"
demo-data.size: "20"
spring.jpa.properties.hibernate.enable_lazy_load_no_trans: "true" #needed for audittrail updates

#mongo
spring.autoconfigure.exclude: ${mongodb.autoconfiguration}
spring.data.mongodb.uri: "mongodb://mongodb:mongodb@localhost:27017/core?authSource=admin"

mongodb.autoconfiguration: "org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration"
jpa.autoconfiguration: "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration"

#s3
spring.cloud.aws.s3.enabled: "false"
spring.cloud.aws.s3.path-style-access-enabled: "true"
spring.cloud.aws.s3.endpoint: "http://localhost:9100"
spring.cloud.aws.credentials.access-key: "minioadmin"
spring.cloud.aws.credentials.secret-key: "minioadmin"
spring.cloud.aws.region.static: "eu"

#logging
logging.pattern.level: "%5p tenantId=%X{tenantId:-}" #"%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] tenantId=%X{tenantId:-}"

logging.level.root: "WARN"
logging.level.org.springframework: "INFO"

logging.level.org.goafabric: "INFO"
logging.level.org.flywaydb.core: "INFO"
logging.level.org.hibernate.SQL: "INFO"
logging.level.org.springframework.data.mongodb: "INFO"
